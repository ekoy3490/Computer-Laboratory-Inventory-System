/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package computer.laboratory.inventory.system.frames;

import com.mysql.cj.jdbc.Blob;
import java.sql.Connection;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;

/**
 *
 * @author Tuason
 */
public class ImageTest extends javax.swing.JFrame {

    private static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    private static final String DB_CONNECTION_URL = "jdbc:mysql://localhost:3306/computer_laboratory_inventory_management";
    private static final String DB_USERNAME = "phpMyAdmin";
    private static final String DB_PASSWORD = "admin";
    
    private String imagePath;
    
    /**
     * Creates new form ImageTest
     */
    public ImageTest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        imageReview = new javax.swing.JLabel();
        uploadBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        retrieveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imageReview.setBackground(new java.awt.Color(255, 255, 255));
        imageReview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(imageReview, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 260, 150));

        uploadBtn.setText("Upload");
        uploadBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        uploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBtnActionPerformed(evt);
            }
        });
        jPanel1.add(uploadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 130, 40));

        saveBtn.setText("Save");
        saveBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        jPanel1.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 130, 40));

        retrieveBtn.setText("Retrieve");
        retrieveBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        retrieveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrieveBtnActionPerformed(evt);
            }
        });
        jPanel1.add(retrieveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, 130, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 300));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void uploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBtnActionPerformed
//        JFileChooser chooser = new JFileChooser();
//        chooser.showOpenDialog(null);
//        File f = chooser.getSelectedFile();
//        String path = f.getAbsolutePath(); 
//        
//        try {
//             // this will resize the image ratio
//            BufferedImage bi = ImageIO.read(new File(path));
//            Image img = bi.getScaledInstance(260, 150, Image.SCALE_SMOOTH);
//            ImageIcon icon = new ImageIcon(img);
//            imageReview.setIcon(icon);
//            
//            // initialize image path
//            this.imagePath = path;
//        } catch (IOException ex) {
//            Logger.getLogger(ImageTest.class.getName()).log(Level.SEVERE, null, ex);
//        }

            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File selectedFile = chooser.getSelectedFile();

            if (selectedFile != null && selectedFile.isFile()) {
                try {
                    String path = selectedFile.getAbsolutePath();

                    // this will resize the image ratio
                    BufferedImage bi = ImageIO.read(selectedFile);
                    Image img = bi.getScaledInstance(260, 150, Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(img);
                    imageReview.setIcon(icon);

                    // initialize image path
                    this.imagePath = path;
                } catch (IOException ex) {
                    Logger.getLogger(ImageTest.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Invalid file selected");
            }
    }//GEN-LAST:event_uploadBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        try {
            Class.forName(JDBC_DRIVER);
            Connection con = DriverManager.getConnection(DB_CONNECTION_URL, DB_USERNAME, DB_PASSWORD);
            String insertQuery = "INSERT INTO image_test (image) VALUES (?)";
            PreparedStatement saveStatement = con.prepareStatement(insertQuery);
            InputStream image = new FileInputStream(new File(imagePath));
            saveStatement.setBlob(1, image);
            if(saveStatement.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(rootPane, "Successfully save image.");
                imageReview.setIcon(null);
            }
        } catch (ClassNotFoundException | SQLException | FileNotFoundException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void retrieveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrieveBtnActionPerformed
        try {
            Class.forName(JDBC_DRIVER);
            Connection con = DriverManager.getConnection(DB_CONNECTION_URL, DB_USERNAME, DB_PASSWORD);
            String selectQuery = "SELECT image FROM image_test WHERE id=?";
            PreparedStatement selectStatement = con.prepareStatement(selectQuery);
            selectStatement.setInt(1, 3);
            ResultSet selectRs = selectStatement.executeQuery();
            if(selectRs.next()) {
                
                Blob imageBlob = (Blob) selectRs.getBlob("image");

                // Specify the desired width and height
                int desiredWidth = 260;
                int desiredHeight = 150;

                // Read the blob data into a byte array
                byte[] imageBytes = imageBlob.getBytes(1, (int) imageBlob.length());

                // Create an ImageIcon from the byte array
                ImageIcon originalIcon = new ImageIcon(imageBytes);

                // Get the Image from the ImageIcon
                Image originalImage = originalIcon.getImage();

                // Calculate the aspect ratio
                double aspectRatio = (double) originalImage.getWidth(null) / originalImage.getHeight(null);

                // Calculate the new width and height based on the desired ratio
//                int newWidth = (int) (desiredHeight * aspectRatio);
                int newWidth = desiredWidth;
                int newHeight = desiredHeight;

                // Scale the image to the new dimensions
                Image scaledImage = originalImage.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);

                // Create a new ImageIcon from the scaled Image
                ImageIcon scaledIcon = new ImageIcon(scaledImage);

                // Set the scaled ImageIcon to your JLabel
                imageReview.setIcon(scaledIcon);
            }
        } catch (ClassNotFoundException | SQLException e) {
         e.printStackTrace();
        }
            
    }//GEN-LAST:event_retrieveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imageReview;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton retrieveBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton uploadBtn;
    // End of variables declaration//GEN-END:variables
}
